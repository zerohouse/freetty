app.get('/api/reply', function (req, res) {
    Reply.find({articleId: req.passed.articleId}).sort({'date': -1}).limit(req.passed.limit).skip(req.passed.skip).exec(function (err, results) {
        res.send(results);
    });
});

app.post('/api/reply', function (req, res) {
    if (req.session.user == undefined) {
        var response = {};
        response.err = '로그인이 필요한 서비스입니다.';
        res.send(response);
        return;
    }
    var reply = new Reply(req.passed);
    reply.date = new Date();
    reply.writer = req.session.user._id;
    reply.save(function (err, result) {
        res.send(reply);
    });
});

app.post('/api/reply/delete', function (req, res) {
    if (req.session.user == undefined) {
        var response = {};
        response.err = '로그인이 필요한 서비스입니다.';
        res.send(response);
        return;
    }
    try {
        var _id = new ObjectID(req.passed._id);
    }
    catch (e) {
        res.send(e);
        return;
    }
    Reply.remove({_id: _id, writer: req.session.user._id}, function (err, result) {
        res.send(result);
    });

});
